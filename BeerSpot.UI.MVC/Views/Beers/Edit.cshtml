@model BeerSpot.DATA.EF.Beer

@{
    ViewBag.Title = "Edit " + Model.Name;
}

<h2 class="text-center mt-3 mb-3">@ViewBag.Title</h2>


@using (Html.BeginForm("Edit", "Beers", FormMethod.Post, new { enctype="multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal contact-form offset-2 col-md-8 text-center">
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.BeerID)
        @Html.HiddenFor(x => x.BeerImage)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2 " })
            <div class="offset-1 col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StyleID, "StyleID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="offset-1 col-md-10">
                @Html.DropDownList("StyleID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StyleID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PricePerBeer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="offset-1 col-md-10">
                @Html.EditorFor(model => model.PricePerBeer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PricePerBeer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ABV, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="offset-1 col-md-10">
                @Html.EditorFor(model => model.ABV, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ABV, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BrewerID, "BrewerID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="offset-1 col-md-10">
                @Html.DropDownList("BrewerID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BrewerID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeerStatusID, "BeerStatusID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="offset-1 col-md-10">
                @Html.DropDownList("BeerStatusID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BeerStatusID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BeerImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="offset-1 col-md-10">
                <img width="150" src="@Url.Content("~/Content/assets/img/" + Model.BeerImage)"/>
                <input type="file" style="display: inline;" name="beerImage"/>
                @*@Html.EditorFor(model => model.BeerImage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BeerImage, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsSeasonal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="offset-1 col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsSeasonal)
                    @Html.ValidationMessageFor(model => model.IsSeasonal, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="offset-1 col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsFeatured, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="offset-1 col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsFeatured)
                    @Html.ValidationMessageFor(model => model.IsFeatured, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="offset-1 col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-1 col-md-9">
                <input type="submit" value="Save" class="offset-4 btn btn-lg btn-warning" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Beers", "Index", null, new { @class="offset-1 btn btn-outline-warning"})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
